입력 값: 1. 버스 정류장 2. 방향


구상
1. 첫 번째 웹 페이지에서 필요한 데이터를 넣는다. (o)

2. 받은 데이터를 MSSQL로 보내서 필요한 데이터를 찾는다.
 1) 정류소 명을 검색 받아서 정류소 id를 찾는다. (여기서 방향은 어떻게 구분을 해야 하는가?)
 2) 정류소 번호 마다 노선번호같은게 있을거같다.



3. 찾은 후 돌려준다.

4. 두 번째 웹 페이지에서 받은 데이터를 바탕으로 결과를 띄워준다.

---------------------------------------------------------------------------------------------------------------------------------
버스 정류장의 앞 뒤 정류장의 정보를 가져온다.
eGd64+KKwReSBNO/uYgP91ORnHfKn5a8+bWxTQXQdqOrGeRVtf++FZufsB1Tz6osqB5cnIOjuFycCi9qnp8iIA==

버스 정류장에는 여러 버스가 온다.
이 버스들은 각각의 노선 ID가 있다.
1. 한 정류소의  버스들,
2. 이 버스들의 노선id를 가져온다.
3. 이걸로 부산시청의 앞 정거장을 찾는다.
4. 앞 정거장이 다른 경우는 분리한다. (네이버맵처럼)

노선 ID들의 현재 입력된 정류장 이름의 인덱스? 위치?를 찾고 다음 정거장을 찾는다. next_station
노선 ID가 다른데 나아가야하는 정류장의 이름이 같다면 묶는다.
노선 ID가 다르고 나아가는 정류장의 이름도 다르다면 분리한다.
---------------------------------------------------------------------------------------------------------------------------------

1. 정류소정보 조회
 - arsno / 정류장 이름

2. 노선정보 조회
 - 노선id / 

http://apis.data.go.kr/6260000/BusanBIMS/busInfo?lineid =5200179000(**&lineno=179** 제거)& serviceKey=서비스키
http://apis.data.go.kr/6260000/BusanBIMS/busInfo?lineid%20=5200179000&%20serviceKey=eGd64+KKwReSBNO/uYgP91ORnHfKn5a8+bWxTQXQdqOrGeRVtf++FZufsB1Tz6osqB5cnIOjuFycCi9qnp8iIA==
 -> 노선 id획득가능

3. 노선 정류소 조회
 - 노선 id

4. 정류소 도착정보 조회(정류장ID)
 - 버스 정류장 id

5. 노선 정류장 도착정보 조회
 - 버스 정류장 id / 노선 id
6. 정류소 도착정보 조회(ARS번호)
 - arsno

목적 입력한 정류장의 현재 대기 버스들

네이버는 총 5번

1. 부산 시청을 치면 총 2개의 (ARSNO), BSTOPID, NODENM 알 수 있다 - ARSNO를 2개 가져옴 (O)
2. API 6번을 사용해서 노선ID들을 받아온다. (LINEID) (O) (반은 a 정류장 반은 b 정류장) 의 노선id (O)
3. API 3번을 사용해서 받아온 노선 ID들의 경로를 조사함 (부산시청의 인덱스를 찾고  arsno를 가져오고, +1 하여 다음 정류장의 이름정보를 가져옴)(O)  - 
4. 받아온 arsno를 다시 API 6번을 사용해서 버스정류장의 현재 정보들을 가져온다.


arsno는 현재 입력된 정류장의 id이고 나타나 있는 이름은 다음 정류장의 이름이다.
정류장 아이디는 2개 하지만 다음으로 나아가야 하는 

2번째 화면
1. 네임을 딱 띄운다.
2. 



영주삼거리 01001 -> 동일파크맨션 
          and 01002 -> 동아아파트

lineid를 받아와서 어떻게 썼는가

정류장이 200개 정도 있다. 0~199
50번째에 있으면 아마 150번 째에 다시 나오겠지
만약 있다면 